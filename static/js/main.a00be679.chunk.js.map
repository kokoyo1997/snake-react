{"version":3,"sources":["constants.js","tools.js","component/Square.js","component/Board.js","component/InfoWrapper.js","component/Control.js","component/Game.js","index.js"],"names":["GRID_SIZE","DIRECTIONS","DIRECTION_TICKS","UP","x","y","BOTTOM","RIGHT","LEFT","KEY_CODES_MAPPER","GAMESTATE","getRandomNumberFromRange","min","max","Math","floor","random","getRandomCoordinate","getRandomFood","snake","food","forEach","ele","getCurTime","d","Date","h","getHours","m","getMinutes","s","getSeconds","length","getHighest","score","localStorage","getItem","undefined","idx2Loc","idx","getSnakeHead","Square","squareType","isSnake","isFood","className","Board","Array","fill","map","InfoWrapper","time","hs","gs","toUpperCase","Control","handleControl","handleProcess","name","onClick","Game","useState","setTime","setSnake","setFood","setScore","direction","setDirection","gameState","setGameState","count","setCount","statusRef","useRef","useEffect","current","restart","handleKeyBoardControl","keyCode","cur_gameState","window","addEventListener","removeEventListener","e","target","blur","timer","setInterval","c","clearInterval","cur","new_head","new_snake","unshift","head","hitBorder","setItem","updateHighest","eatSelfIdx","i","eatSelf","prev","slice","eatFood","pop","now","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a00be679.chunk.js","sourcesContent":["//�������и���\r\nexport const GRID_SIZE = 20;\r\n\r\n//�ߵ�����ǰ������\r\nexport const DIRECTIONS = {\r\n    UP: 'UP',\r\n    BOTTOM: 'BOTTOM',\r\n    RIGHT: 'RIGHT',\r\n    LEFT: 'LEFT',\r\n};\r\n\r\n//���ַ��������仯\r\nexport const DIRECTION_TICKS = {\r\n    UP: (x, y) => ({ x, y: y - 1 }),\r\n    BOTTOM: (x, y) => ({ x, y: y + 1 }),\r\n    RIGHT: (x, y) => ({ x: x + 1, y }),\r\n    LEFT: (x, y) => ({ x: x - 1, y }),\r\n};\r\n  \r\n//����codeֵ\r\nexport const KEY_CODES_MAPPER = {\r\n    38: 'UP',\r\n    39: 'RIGHT',\r\n    37: 'LEFT',\r\n    40: 'BOTTOM',\r\n};\r\n\r\n//��Ϸ״̬\r\nexport const GAMESTATE={\r\n    READY:'ready',\r\n    RUN:'run',\r\n    PAUSE:'pause',\r\n    OVER:'over'\r\n};\r\n\r\n//���ƶ��ٶ�\r\nexport const FREQ=200;","import {\r\n    GRID_SIZE\r\n} from \"./constants\";\r\n\r\n//��ָ����[min,max]�ڲ���һ���������\r\nconst getRandomNumberFromRange = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n\r\n//��ȡһ��������꣨���ڲ���ʳ����߳�ʼλ��\r\nexport const getRandomCoordinate = () => {\r\n    return {\r\n        x: getRandomNumberFromRange(0, GRID_SIZE - 1),\r\n        y: getRandomNumberFromRange(0, GRID_SIZE - 1)\r\n    }\r\n}\r\n//����ʳ��պó�����������\r\nexport const getRandomFood = (snake) => {\r\n    let food = getRandomCoordinate();\r\n    snake.forEach(ele => {\r\n        if (food.x === ele.x && food.y === ele.y) food = getRandomFood(snake);\r\n    });\r\n    return food;\r\n}\r\n\r\n//��ȡ����ʱ��\r\nexport const getCurTime = () => {\r\n    let d = new Date();\r\n    let h = \"\" + d.getHours(),\r\n        m = \"\" + d.getMinutes(),\r\n        s = \"\" + d.getSeconds();\r\n\r\n    let res = (h.length === 2 ? h : \"0\" + h) + \":\" + (m.length === 2 ? m : \"0\" + m) + \":\" + (s.length === 2 ? s : \"0\" + s);\r\n    return res;\r\n}\r\n\r\n//��ȡ�������¼�����߷�\r\nexport const getHighest = () => {\r\n    let score = localStorage.getItem(\"snake-hs\");\r\n    return score == undefined ? 0 : score;\r\n}\r\n\r\n//ˢ����߷�\r\nexport const updateHighest = (score, hs) => {\r\n    let max = Math.max(hs, score);\r\n    localStorage.setItem(\"snake-hs\", max);\r\n}\r\n//��������->����\r\nconst idx2Loc = (idx) => {\r\n    return [idx % GRID_SIZE, Math.floor(idx / GRID_SIZE)];\r\n}\r\n//��������->����\r\nconst loc2Idx = (x, y) => {\r\n    return y * GRID_SIZE + x;\r\n}\r\n//���������ж��ǲ����߸�\r\nexport const isSnake = (idx, snake) => {\r\n    let [x, y] = idx2Loc(idx);\r\n    for (let ele of snake) {\r\n        if (ele.x === x && ele.y === y) return true;\r\n    }\r\n    return false;\r\n}\r\n//���������ж��ǲ���ʳ���\r\nexport const isFood = (idx, food) => {\r\n    let [x, y] = idx2Loc(idx);\r\n    if (food.x === x && food.y === y) return true;\r\n    return false;\r\n}\r\n//��ȡ��ͷ����\r\nexport const getSnakeHead = (snake) => {\r\n    return snake[0];\r\n}\r\n\r\n//�Ƿ�ײǽ\r\nexport const hitBorder = snake => {\r\n    let head = getSnakeHead(snake);\r\n    if (head.x < 0 || head.y < 0 || head.x >= GRID_SIZE || head.y >= GRID_SIZE) return true;\r\n    return false;\r\n}\r\n//�Ƿ�Ե��Լ�\r\nexport const eatSelf = snake => {\r\n    let head = getSnakeHead(snake);\r\n    for (let i = snake.length - 1; i > 0; i--) {\r\n        if (head.x === snake[i].x && head.y === snake[i].y) return i;\r\n    }\r\n    return -1;\r\n}\r\n\r\n//�Ƿ�Ե�ʳ��\r\nexport const eatFood = (snake, food) => {\r\n    let head = getSnakeHead(snake);\r\n    if (head.x === food.x && head.y === food.y) return true;\r\n    return false\r\n}","import { isSnake, isFood } from \"../tools\";\r\n\r\nfunction Square({snake,food,idx}){\r\n    let squareType=\"square\";\r\n    if(isSnake(idx,snake)) squareType+=\" snake\";\r\n    else if(isFood(idx,food)) squareType+=\" food\";\r\n    return (\r\n        <div className={squareType}></div>\r\n    )\r\n}\r\nexport default Square;","import Square from \"./Square\";\r\nfunction Board({snake,food}){\r\n    return (\r\n        <div className=\"board\">\r\n            {new Array(400).fill(null).map((ele,idx)=>(\r\n                <Square \r\n                    key={idx}\r\n                    snake={snake}\r\n                    food={food}\r\n                    idx={idx}\r\n                />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\nexport default Board;","function InfoWrapper({time,score,hs,gs}){\r\n    return (\r\n        <div className=\"info\">\r\n            <div className=\"socre\">Score: {score}</div>\r\n            <div className=\"time\">Time: {time}</div>\r\n            <div className=\"status\">Status: {gs.toUpperCase()} </div>\r\n            <div className=\"high-socre\">High Score: {hs}</div>\r\n          </div>\r\n    )\r\n}\r\nexport default InfoWrapper;","import { DIRECTIONS } from \"../constants\";\r\n\r\nfunction Control({handleControl,handleProcess}){\r\n    return (\r\n        <div className=\"control\">\r\n            <div className=\"btns\">\r\n              <button className=\"pause iconfont icon-ic_suspend\" name=\"pause\" onClick={handleProcess}></button>\r\n              <button className=\"restart iconfont icon-ic_refresh\" name=\"restart\" onClick={handleProcess}></button>\r\n              <button className=\"start iconfont icon-ic_play\" name=\"start\" onClick={handleProcess}></button>\r\n            </div>\r\n            <div className=\"operate\">\r\n              <button className=\"up iconfont icon-ic_arrow_up\" name={DIRECTIONS.UP} onClick={handleControl}></button>\r\n              <button className=\"down iconfont icon-ic_arrow_down\" name={DIRECTIONS.BOTTOM} onClick={handleControl}></button>\r\n              <button className=\"left iconfont icon-ic_arrow_left\" name={DIRECTIONS.LEFT} onClick={handleControl}></button>\r\n              <button className=\"right iconfont icon-ic_arrow_right\" name={DIRECTIONS.RIGHT} onClick={handleControl}></button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Control;","import Board from \"./Board\";\r\nimport InfoWrapper from \"./InfoWrapper\";\r\nimport Control from \"./Control\";\r\nimport {useEffect, useRef, useState } from \"react\";\r\nimport { eatFood, eatSelf, getCurTime, getHighest, updateHighest } from \"../tools\";\r\nimport { DIRECTIONS, DIRECTION_TICKS, FREQ, GAMESTATE, KEY_CODES_MAPPER } from \"../constants\";\r\nimport { getRandomCoordinate, getRandomFood, getSnakeHead, hitBorder } from \"../tools\";\r\n\r\nfunction Game(){\r\n    const [time,setTime]=useState(getCurTime());\r\n\r\n    const [snake,setSnake]=useState([getRandomCoordinate()]);\r\n    const [food,setFood]=useState(getRandomFood(snake));\r\n    const [score,setScore]=useState(0);\r\n    const [direction,setDirection]=useState(DIRECTIONS.UP);\r\n    const [gameState,setGameState]=useState(GAMESTATE.READY);\r\n\r\n    const [count,setCount]=useState(0);//����ָʾ�ߵĸ���\r\n    \r\n    //ʵʱ��Ϸ״̬\r\n    const statusRef=useRef(GAMESTATE.READY);\r\n    useEffect(()=>{\r\n        statusRef.current=gameState;\r\n    },[gameState]);\r\n\r\n    //�ؿ�\r\n    const restart=()=>{\r\n        setSnake([getRandomCoordinate()]);\r\n        setFood(getRandomFood(snake));\r\n        setScore(0);\r\n        setDirection(DIRECTIONS.UP);\r\n    }\r\n\r\n    //���Ʒ��� \r\n    const handleControl=({target})=>{\r\n        if(gameState!==GAMESTATE.RUN) return;\r\n        let {name}=target;\r\n        setDirection(name);\r\n    }\r\n\r\n    //���ƿ�ʼ/��ͣ/�ؿ� \r\n    const handleProcess=({target})=>{\r\n        let {name}=target;\r\n        switch(name){\r\n            case \"start\":\r\n                if(gameState!==GAMESTATE.OVER)\r\n                    setGameState(GAMESTATE.RUN);\r\n                break;\r\n            case \"pause\": \r\n                if(gameState!==GAMESTATE.OVER&&gameState!==GAMESTATE.READY)\r\n                    setGameState(GAMESTATE.PAUSE);\r\n                break;\r\n            case \"restart\": setGameState(GAMESTATE.READY);restart();break;\r\n            default: setGameState(GAMESTATE.READY);break;\r\n        }\r\n    }\r\n    // ���̿��Ʒ������ͣ\r\n    const handleKeyBoardControl=({keyCode})=>{\r\n        let cur_gameState=statusRef.current;\r\n        if(keyCode===32){\r\n            if(cur_gameState===GAMESTATE.PAUSE||cur_gameState===GAMESTATE.READY) setGameState(GAMESTATE.RUN);\r\n            else if(cur_gameState===GAMESTATE.RUN) setGameState(GAMESTATE.PAUSE);\r\n            else if(cur_gameState===GAMESTATE.OVER) {\r\n                setGameState(GAMESTATE.READY);\r\n                restart();\r\n            }\r\n            \r\n        }else if(cur_gameState===GAMESTATE.RUN&&KEY_CODES_MAPPER[keyCode]){\r\n            setDirection(KEY_CODES_MAPPER[keyCode]);\r\n        }\r\n            \r\n    }\r\n    useEffect(()=>{\r\n        window.addEventListener(\"keyup\",handleKeyBoardControl,false);\r\n        return ()=>{\r\n            window.removeEventListener(\"keyup\",handleKeyBoardControl,false);\r\n        }\r\n    },[]);\r\n\r\n    //��ֹ�ֶ������ť����space���������ð�ť\r\n    useEffect(()=>{\r\n        window.addEventListener(\"click\",(e)=>{\r\n            e.target.blur();\r\n        });\r\n    });\r\n\r\n    // ���ƶ���ʱ��\r\n    useEffect(()=>{\r\n        if(gameState===GAMESTATE.RUN){\r\n            let timer=setInterval(()=>{\r\n                setCount(c=>c+1);\r\n            },FREQ);\r\n            return ()=>{\r\n                clearInterval(timer);\r\n            }\r\n        }\r\n    },[gameState]);\r\n\r\n    \r\n    // ���ƶ������¸���״̬\r\n    // ����ط����ǲ��ã�������lie������ֻ����useReducer��(ɾ������)\r\n    // ��useReducer����һ�飬�о�������Ŀǰ�����أ��ο��ı��˵Ĵ��룬��ʱ���������ؽ�����\r\n    // ����useReducer�����������ӵ�״̬��ȷʵ����\r\n    useEffect(()=>{\r\n        let cur=getSnakeHead(snake);\r\n        let new_head=DIRECTION_TICKS[direction](cur.x,cur.y);\r\n        let new_snake=[...snake];\r\n        new_snake.unshift(new_head);\r\n        \r\n        if(hitBorder(new_snake)){\r\n            setGameState(GAMESTATE.OVER);\r\n            updateHighest(score,getHighest());\r\n            return;\r\n        }else{\r\n            let eatSelfIdx=eatSelf(new_snake);\r\n            if(eatSelfIdx!==-1){ //�Ե��ļ����ص����۷�\r\n                setScore(prev=>Math.max(0,prev-2*(new_snake.length-eatSelfIdx)));\r\n                new_snake=new_snake.slice(0,eatSelfIdx);\r\n                \r\n            }else{\r\n                if(eatFood(new_snake,food)) { //�Ե�ʳ��ӷ֣���������ʳ��\r\n                    setFood(getRandomFood(new_snake));\r\n                    setScore(prev=>prev+new_snake.length);\r\n                }else{\r\n                    new_snake.pop();\r\n                }\r\n            }\r\n        } \r\n        setSnake(new_snake);\r\n    },[count]);\r\n\r\n\r\n    //���µ�ǰʱ��\r\n    useEffect(()=>{\r\n        let timer=setInterval(()=>{\r\n            let now=getCurTime();\r\n            setTime(now);\r\n            \r\n        },1000);\r\n        return ()=>{\r\n            clearInterval(timer);\r\n        }\r\n    },[]);\r\n    return (\r\n        <div className=\"box\">\r\n            <main>\r\n                <h1>Snake Game in React</h1> \r\n                <Board \r\n                    snake={snake}\r\n                    food={food}\r\n                />\r\n                <div className=\"side\">\r\n                    <InfoWrapper \r\n                        time={time}\r\n                        score={score}\r\n                        hs={getHighest()}\r\n                        gs={gameState}\r\n                    />\r\n                    <Control \r\n                        handleControl={handleControl}\r\n                        handleProcess={handleProcess}\r\n                    />\r\n                </div>\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Game;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './font/iconfont.css';\nimport Game from './component/Game'\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}